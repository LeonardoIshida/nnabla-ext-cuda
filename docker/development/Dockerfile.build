# Copyright (c) 2017 Sony Corporation. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG BASE
FROM ${BASE}

ENV LC_ALL C
ENV LANG C
ENV LANGUAGE C

RUN yum install -y \
    centos-release-scl \
    epel-release \
    yum-utils \
    && yum-config-manager --enable rhel-server-rhscl-7-rpms \
    && yum install -y \
    curl \
    devtoolset-4-binutils \
    devtoolset-4-gcc \
    devtoolset-4-gcc-c++ \
    devtoolset-4-gcc-gfortran \
    git19 \
    hdf5 \
    hdf5-devel \
    unzip \
    wget \
    zip \
    zlib-static \
    && yum clean all

ENV PATH=/opt/rh/git19/root/usr/bin:/opt/rh/devtoolset-4/root/usr/bin:$PATH
ENV LD_LIBRARY_PATH=/opt/rh/gti19/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib64:/opt/rh/devtoolset-4/root/usr/lib:$LD_LIBRARY_PATH
ENV PKG_CONFIG_PATH=/opt/rh/git19/root/usr/lib64/pkgconfig:$PKG_CONFIG_PATH

RUN mkdir -p /tmp/deps \
    && yum install -y cmake \
    && yum clean all \
    && cd /tmp/deps \
    && curl -L https://cmake.org/files/v3.9/cmake-3.9.0.tar.gz -o cmake-3.9.0.tar.gz \
    && tar xf cmake-3.9.0.tar.gz \
    && cd cmake-3.9.0 \
    && mkdir build \
    && cd build \
    && cmake -DBUILD_TESTING=FALSE .. \
    && make \
    && make install \
    && cd / \
    && rm -rf /tmp/*

RUN curl -L https://github.com/google/protobuf/archive/v3.1.0.tar.gz -o /tmp/protobuf-v3.1.0.tar.gz \
    && cd /tmp \
    && tar xvf protobuf-v3.1.0.tar.gz \
    && cd protobuf-3.1.0 \
    && mkdir build \
    && cd build \
    && cmake \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -Dprotobuf_BUILD_TESTS=OFF \
        ../cmake \
    && make \
    && make install \
    && cd / \
    && rm -rf /tmp/*

RUN cd /tmp \
    && curl -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \
    && tar xfa libarchive-3.3.2.tar.gz \
    && mkdir libarchive-build \
    && cd libarchive-build \
    && cmake \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
        -DENABLE_NETTLE=FALSE \
        -DENABLE_OPENSSL=FALSE \
        -DENABLE_LZO=FALSE \
        -DENABLE_LZMA=FALSE \
        -DENABLE_BZip2=FALSE \
        -DENABLE_LIBXML2=FALSE \
        -DENABLE_EXPAT=FALSE \
        -DENABLE_PCREPOSIX=FALSE \
        -DENABLE_LibGCC=FALSE \
        -DENABLE_CNG=FALSE \
        -DENABLE_TAR=FALSE \
        -DENABLE_TAR_SHARED=FALSE \
        -DENABLE_CPIO=FALSE \
        -DENABLE_CPIO_SHARED=FALSE \
        -DENABLE_CAT=FALSE \
        -DENABLE_CAT_SHARED=FALSE \
        -DENABLE_XATTR=FALSE \
        -DENABLE_ACL=FALSE \
        -DENABLE_ICONV=FALSE \
        -DENABLE_TEST=FALSE \
        ../libarchive-3.3.2 \
    && make \
    && make install \
    && cd / \
    && rm -rf /tmp/*

RUN cd /tmp \
    && wget http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 \
    && tar xfa patchelf-0.9.tar.bz2 \
    && cd patchelf-0.9 \
    && ./configure \
    && make \
    && make install \
    && cd / \
    && rm -rf /tmp/*

ARG PYTHON_VERSION_MAJOR
ARG PYTHON_VERSION_MINOR
ENV PYENVNAME=py${PYTHON_VERSION_MAJOR}${PYTHON_VERSION_MINOR}
ENV PYVERNAME=${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR}

# Conda environment for Python3 versions
ADD python/requirements.txt /tmp/deps/
RUN umask 0 \
     && wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \
     && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 \
     && rm -rf Miniconda3-latest-Linux-x86_64.sh \
     && /opt/miniconda3/bin/conda create -y -n ${PYENVNAME} python=${PYVERNAME} \
     && source /opt/miniconda3/bin/activate ${PYENVNAME} \
     && conda install scandir scikit-image \
     && echo Try to install setuptools few times to avoid conda problem. \
     && (pip install --no-cache-dir -U setuptools || pip install --no-cache-dir -U setuptools || pip install --no-cache-dir -U setuptools || true) \
     && pip install --no-cache-dir -U -r /tmp/deps/requirements.txt \
     && pip install --no-cache-dir -U "pytest-pep8" \
     && pip install --no-cache-dir -U "pytest-cov" \
     && pip install --no-cache-dir -U "Cython<0.25" \
     && pip install --no-cache-dir -U "numpy<1.11"

ENV PATH /opt/miniconda3/envs/${PYENVNAME}/bin:$PATH
